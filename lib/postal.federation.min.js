/*
 postal.federation
 Copyright (C) 2012 - Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT & GPL v2.0
 Version 0.2.1
 */
(function(t,n){"object"==typeof module&&module.exports?module.exports=function(t,e,i){return n(t,e,i)}:"function"==typeof define&&define.amd?define(["underscore","postal","riveter"],function(e,i,o){return n(e,i,o,t)}):t.postal=n(t._,t.postal,t.riveter,t)})(this,function(t,n,e,i,o){n.utils.createUUID||(n.utils.createUUID=function(){for(var t=[],n="0123456789abcdef",e=0;36>e;e++)t[e]=n.substr(Math.floor(16*Math.random()),1);return t[14]="4",t[19]=n.substr(8|3&t[19],1),t[8]=t[13]=t[18]=t[23]="-",t.join("")}),n.instanceId||(n.instanceId=function(){var t,e;return function(i){return i&&(e=t,t=i,n.publish({channel:n.configuration.SYSTEM_CHANNEL,topic:"instanceId.changed",data:{oldId:e,newId:t}})),t}}());var s=function(){},a=!1,c=[],r=[],d=[],p={enabled:!0,filterMode:"whitelist",filterDirection:"both"},l=p,u={ping:function(){return{type:"federation.ping",instanceId:n.instanceId(),timeStamp:new Date,ticket:n.utils.createUUID()}},pong:function(t){return{type:"federation.pong",instanceId:n.instanceId(),timeStamp:new Date,pingData:{instanceId:t.instanceId,timeStamp:t.timeStamp,ticket:t.ticket}}},message:function(t){return{type:"federation.message",instanceId:n.instanceId(),timeStamp:new Date,envelope:t}},bundle:function(t){return{type:"federation.bundle",instanceId:n.instanceId(),timeStamp:new Date,packingSlips:t}}},f={"federation.ping":function(t){t.source.instanceId=t.packingSlip.instanceId,t.source.handshakeComplete?t.source.sendPong(t.packingSlip):t.source.sendBundle([n.fedx.getPackingSlip("pong",t.packingSlip),n.fedx.getPackingSlip("ping")])},"federation.pong":function(e){e.source.handshakeComplete=!0,e.source.instanceId=e.packingSlip.instanceId,e.source.pings[e.packingSlip.pingData.ticket]&&(e.source.pings[e.packingSlip.pingData.ticket].callback({ticket:e.packingSlip.pingData.ticket,instanceId:e.packingSlip.instanceId,source:e.source}),e.source.pings[e.packingSlip.pingData.ticket]=o),t.contains(n.fedx.clients,e.packingSlip.instanceId)||n.fedx.clients.push(e.packingSlip.instanceId),n.publish({channel:"postal.federation",topic:"client.federated",data:{remoteId:e.source.instanceId,localId:n.instanceId(),transport:e.transport}})},"federation.message":function(t){var e=t.packingSlip.envelope;h(e.channel,e.topic,"in")&&(e.lastSender=t.packingSlip.instanceId,n.publish(e))},"federation.bundle":function(e){t.each(e.packingSlip.packingSlips,function(i){n.fedx.onFederatedMsg(t.extend({},e,{packingSlip:i}))})}},h=function(e,i,o){var s=Object.prototype.hasOwnProperty.call(n.fedx.filters[o],e),a=s&&t.any(n.fedx.filters[o][e],function(t){return n.configuration.resolver.compare(t,i)}),c="blacklist"===l.filterMode;return l.enabled&&(c&&(!s||s&&!a)||!c&&s&&a)},g=function(t,n,e){this.transportName=o,this.target=t,this.options=n||{},this.pings={},this.instanceId=e,this.handshakeComplete=!1};return g.prototype.sendPing=function(t){var e=n.fedx.getPackingSlip("ping");this.pings[e.ticket]={ticket:e.ticket,callback:t||s},this.send(e)},g.prototype.sendPong=function(t){this.send(n.fedx.getPackingSlip("pong",t))},g.prototype.sendBundle=function(t){this.send(n.fedx.getPackingSlip("bundle",t))},g.prototype.sendMessage=function(e){if(this.handshakeComplete){e.originId=e.originId||n.instanceId();var i=t.clone(e);!this.instanceId||this.instanceId===i.lastSender||i.knownIds&&i.knownIds.length&&(!i.knownIds||t.include(i.knownIds,this.instanceId))||(i.knownIds=(i.knownIds||[]).concat(t.without(n.fedx.clients,this.instanceId)),this.send(n.fedx.getPackingSlip("message",i)))}},g.prototype.onMessage=function(t){this.shouldProcess()&&n.fedx.onFederatedMsg({transport:this.transportName,packingSlip:t,source:this})},g.prototype.shouldProcess=function(){return!0},g.prototype.send=function(){throw Error("An object deriving from FederationClient must provide an implementation for 'send'.")},e(g),n.fedx=t.extend({FederationClient:g,clients:[],transports:{},filters:{"in":{},out:{}},addFilter:function(n){n=t.isArray(n)?n:[n],t.each(n,function(n){n.direction=n.direction||l.filterDirection,t.each("both"===n.direction?["in","out"]:[n.direction],function(e){this.filters[e][n.channel]?t.include(this.filters[e][n.channel],n.topic)||this.filters[e][n.channel].push(n.topic):this.filters[e][n.channel]=[n.topic]},this)},this)},removeFilter:function(n){n=t.isArray(n)?n:[n],t.each(n,function(n){n.direction=n.direction||l.filterDirection,t.each("both"===n.direction?["in","out"]:[n.direction],function(e){this.filters[e][n.channel]&&t.include(this.filters[e][n.channel],n.topic)&&(this.filters[e][n.channel]=t.without(this.filters[e][n.channel],n.topic))},this)},this)},canSendRemote:function(t,n){return h(t,n,"out")},configure:function(n){if(n&&n.filterMode&&"blacklist"!==n.filterMode&&"whitelist"!==n.filterMode)throw Error("postal.fedx filterMode must be 'blacklist' or 'whitelist'.");return n&&(l=t.defaults(n,p)),l},getPackingSlip:function(t){return Object.prototype.hasOwnProperty.call(u,t)?u[t].apply(this,Array.prototype.slice.call(arguments,1)):o},onFederatedMsg:function(t){if(!a)return c.push(t),o;if(!Object.prototype.hasOwnProperty.call(f,t.packingSlip.type))throw Error("postal.federation does not have a message handler for '"+t.packingSlip.type+"'.");f[t.packingSlip.type](t)},sendMessage:function(n){return a?(t.each(this.transports,function(t){t.sendMessage(n)}),o):(r.push(arguments),o)},signalReady:function(n,e){if(!a)return d.push(arguments),o;switch(arguments.length){case 0:n=t.reduce(this.transports,function(t,n,e){return t[e]=!0,t},{});break;case 1:"function"==typeof n&&(e=n,n=t.reduce(this.transports,function(t,n,e){return t[e]=!0,t},{}))}"[object String]"===Object.prototype.toString.call(n)?this.transports[n].signalReady([],e):t.each(n||this.transports,function(t,n){t="[object Boolean]"===Object.prototype.toString.call(t)?[]:t,this.transports[n].signalReady(t,e)},this)}},n.fedx),n.addWireTap(function(t,e){n.fedx.canSendRemote(e.channel,e.topic)&&n.fedx.sendMessage(e)}),n.subscribe({channel:n.configuration.SYSTEM_CHANNEL,topic:"instanceId.changed",callback:function(){for(a=!0;d.length;)(function(t){n.fedx.signalReady.apply(this,t)})(d.shift());for(;r.length;)(function(t){n.fedx.send.apply(this,t)})(r.shift());for(;c.length;)(function(t){n.fedx.onFederatedMsg.call(this,t)})(c.shift())}}),n.instanceId()!==o&&(a=!0),n});